cbuffer psConstant
{
	float3 LightPos;
	float4 LightColor;
	float3 eyePos;
}


Texture2D dtext: register(t0);            // Diffuse texture for mesh

SamplerState MeshTextureSampler : register(s0);

struct VS_OUTPUT
{
    float4 Position     : SV_POSITION;
	float3 Normal		: NORMAL;
	float2 Texcoord		: TEXCOORD;
};

float4 PS(VS_OUTPUT input) : SV_TARGET
{

	float3 lightDir = normalize(- LightPos);
	float diffuseLightingFactor = dot(-lightDir, input.Normal);
	float3 vhalf = normalize(eyePos -lightDir);
	float specular = dot(input.Normal, vhalf);
	specular = pow(specular, 32);
	diffuseLightingFactor = saturate(diffuseLightingFactor*LightColor)+0.085f;
	specular = saturate(specular*LightColor);
	float3 diffuseColor = dtext.Sample(MeshTextureSampler, input.Texcoord);
	float3 result = diffuseColor*diffuseLightingFactor+diffuseColor*specular;
	return float4(result,1);
}